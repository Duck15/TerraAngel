--- src/Terraria/Terraria/Player.cs
+++ src/TerraAngel/Terraria/Player.cs
@@ -533,6 +_,7 @@
         }
     }
 
+    public bool TerraAngelUser = false;
     public int emoteTime;
     public CreativeUnlocksTracker creativeTracker;
     private static byte[] ENCRYPTION_KEY = new UnicodeEncoding().GetBytes("h3y_gUyZ");
@@ -907,8 +_,10 @@
     public int potionDelay;
     public byte difficulty;
     public byte wetSlime;
-    public HitTile hitTile;
+    public HitTile? _hitTile;
-    public HitTile hitReplace;
+    public HitTile? _hitReplace;
+    public HitTile hitTile { get { if (_hitTile is null) _hitTile = new HitTile(); return _hitTile; } }
+    public HitTile hitReplace { get { if (_hitReplace is null) _hitReplace = new HitTile(); return _hitReplace; } }
     public int jump;
     public int head = -1;
     public int body = -1;
@@ -11562,6 +_,7 @@
 
     public void Yoraiz0rEye()
     {
+        if (TerraAngel.Hooks.DrawHooks.OptimizationCache?.DisableDust ?? false || ClientConfig.Settings.IgnoreReLogicBullshit) return;
         int num = 0;
         num += bodyFrame.Y / 56;
         if (num >= Main.OffsetsPlayerHeadgear.Length)
@@ -16368,6 +_,7 @@
         ZoneLihzhardTemple = false;
         int num3 = (int)base.Center.X / 16;
         int num4 = (int)base.Center.Y / 16;
+        if (!Main.tile.InWorld(num3, num4)) return;
         if (Main.tile[num3, num4] != null && Main.tile[num3, num4].wall == 87)
         {
             ZoneLihzhardTemple = true;
@@ -17823,7 +_,7 @@
                 }
 
                 int num5 = tile.frameY / 22;
-                if (num5 < TorchID.Count)
+                if (num5 < 22 && num5 >= 0)
                 {
                     nearbyTorch[num5] = true;
                     if (num5 == 17 && (tile.liquid == 0 || tile.liquidType() != 0))
@@ -18292,7 +_,9 @@
         return Main.player[FindClosest(new Vector2(x * 16, y * 16), 1, 1)].RollLuck(range);
     }
 
+    public void ResetEffects() => TerraAngel.Hooks.PlayerHooks.PlayerResetEffectsHook((x) => x._ResetEffects(), this);
+
-    public void ResetEffects()
+    private void _ResetEffects()
     {
         if (extraAccessory && (Main.expertMode || Main.gameMenu))
         {
@@ -19562,7 +_,7 @@
 
         int num = (int)(position.X + (float)(width / 2)) / 16;
         int num2 = (int)(position.Y - 8f) / 16;
-        if (!WorldGen.IsRope(num, num2))
+        if (!WorldGen.InWorld(num, num2) || Main.tile[num, num2] == null || !Main.tile[num, num2].active() || !Main.tileRope[Main.tile[num, num2].type])
         {
             return;
         }
@@ -23730,7 +_,7 @@
 
     public static int GetFloorTileType(int x, int y)
     {
-        return ((int?)GetFloorTile(x, y)?.type) ?? (-1);
+        return (int)GetFloorTile(x, y).type;
     }
 
     private void MakeFloorDust(bool Falling, int type, int paintColor)
@@ -28333,28 +_,35 @@
             CheckCrackedBrickBreak();
         }
 
+        if ((!CringeManager.GetCringe<NoClipCringe>().Enabled && i == Main.myPlayer) || (i != Main.myPlayer && Main.tile.IsTileInLoadedSection(((int)(position.X / 16f)), ((int)(position.Y / 16f)))))
+        {
         if (!shimmering)
         {
             SlopeDownMovement();
+            // patch context
             bool flag27 = mount.Type == 7 || mount.Type == 8 || mount.Type == 12 || mount.Type == 44 || mount.Type == 49;
             if (velocity.Y == gravity && (!mount.Active || (!mount.Cart && mount.Type != 48 && !flag27)))
             {
                 Collision.StepDown(ref position, ref velocity, width, height, ref stepSpeed, ref gfxOffY, (int)gravDir, waterWalk || waterWalk2);
             }
-
+            // patch context
             if (gravDir == -1f)
             {
+                // patch context
                 if ((carpetFrame != -1 || velocity.Y <= gravity) && !controlUp)
                 {
                     Collision.StepUp(ref position, ref velocity, width, height, ref stepSpeed, ref gfxOffY, (int)gravDir, controlUp);
                 }
+                // patch context
             }
             else if ((carpetFrame != -1 || velocity.Y >= gravity) && !controlDown && !mount.Cart && !flag27 && grappling[0] == -1)
             {
                 Collision.StepUp(ref position, ref velocity, width, height, ref stepSpeed, ref gfxOffY, (int)gravDir, controlUp);
             }
+            // patch context
         }
 
+        // patch context
         oldPosition = position;
         oldDirection = direction;
         bool falling = false;
@@ -28549,20 +_,22 @@
         {
             FloorVisuals(falling);
         }
-
+        // patch context
         if (whoAmI == Main.myPlayer && !shimmering)
         {
             Collision.SwitchTiles(position, width, height, oldPosition, 1);
         }
-
+        // patch context
         PressurePlateHelper.UpdatePlayerPosition(this);
         BordersMovement();
         numMinions = 0;
         slotsMinions = 0f;
+        // patch context
         if (Main.netMode != 2 && mount.Type != 8)
         {
             ItemCheck_ManageRightClickFeatures();
         }
+        }
 
         ItemCheckWrapped(i);
         PlayerFrame();
@@ -28715,6 +_,7 @@
         return result;
     }
 
+
     private void AdjustRemainingPotionSickness()
     {
         if (whoAmI == Main.myPlayer)
@@ -31201,7 +_,9 @@
         HotbarOffset = 0;
     }
 
+    private void ItemCheckWrapped(int i) => TerraAngel.Hooks.PlayerHooks.PlayerItemCheckHook((x, y) => x._ItemCheckWrapped(y), this, i);
+
-    private void ItemCheckWrapped(int i)
+    private void _ItemCheckWrapped(int i)
     {
         int num;
         if (!controlLeft && !controlRight && !controlUp && !controlDown && PlayerInput.UsingGamepad && Main.SmartCursorIsUsed)
@@ -38120,6 +_,8 @@
             Main.ActivePlayerFileData.StartPlayTimer();
             Hooks.EnterWorld(whoAmI);
         }
+
+        TerraAngel.Hooks.PlayerHooks.presenceUpdateCount = 0;
     }
 
     public bool Spawn_GetPositionAtWorldSpawn(ref int floorX, ref int floorY)
@@ -38190,6 +_,7 @@
             bool flag = false;
             for (int j = -1; j <= 1; j++)
             {
+                if (!Main.tile.InWorld(x + j, y + i)) continue;
                 Tile tile = Main.tile[x + j, y + i];
                 if (tile.nactive() && (Main.tileSolid[tile.type] || !Main.tileSolidTop[tile.type]))
                 {
@@ -38238,7 +_,7 @@
         {
             for (int j = floorY - 3; j < floorY; j++)
             {
-                if (Main.tile[i, j] != null)
+                if (Main.tile.InWorld(i, j))
                 {
                     if (Main.tile[i, j].nactive() && Main.tileSolid[Main.tile[i, j].type] && !Main.tileSolidTop[Main.tile[i, j].type])
                     {
@@ -38397,6 +_,17 @@
 
     public double Hurt(PlayerDeathReason damageSource, int Damage, int hitDirection, bool pvp = false, bool quiet = false, bool Crit = false, int cooldownCounter = -1, bool dodgeable = true)
     {
+        if (whoAmI == Main.myPlayer && CringeManager.GetCringe<AntiHurtCringe>().Enabled)
+        {
+            statLife = statLifeMax2;
+            if (CringeManager.GetCringe<AntiHurtCringe>().FramesSinceLastLifePacket == 0)
+            {
+                CringeManager.GetCringe<AntiHurtCringe>().FramesSinceLastLifePacket = 6;
+                NetMessage.SendData(MessageID.PlayerLife, -1, -1, null, whoAmI);
+            }
+            return 0.0d;
+        }
+
         if (shimmering && AllowShimmerDodge(damageSource, cooldownCounter, dodgeable))
         {
             return 0.0;
@@ -38991,6 +_,12 @@
 
     public void KillMe(PlayerDeathReason damageSource, double dmg, int hitDirection, bool pvp = false)
     {
+        if (whoAmI == Main.myPlayer && CringeManager.GetCringe<AntiHurtCringe>().Enabled)
+        {
+            NetMessage.SendData(MessageID.PlayerLife, -1, -1, null, whoAmI);
+            return;
+        }
+
         if (creativeGodMode || dead)
         {
             return;
@@ -43006,7 +_,7 @@
         return num;
     }
 
-    private void Fishing_GetBait(out int baitPower, out int baitType)
+    public void Fishing_GetBait(out int baitPower, out int baitType)
     {
         baitPower = 0;
         baitType = 0;
@@ -56367,8 +_,6 @@
             oldAdjTile[n] = false;
         }
 
-        hitTile = new HitTile();
-        hitReplace = new HitTile();
         mount = new Mount();
         talkNPC = -1;
         piggyBankProjTracker.Clear();
