namespace TerraAngel.Tools.Exploit;

public class PortalKick : Tool
{
    public override string Name => GetString("Portal Kick");
    public override ToolTabs Tab => ToolTabs.MiscTools;

    public bool[] IsExploiting = new bool[Main.maxPlayers];
    public float SendTimer;

    public override void DrawUI(ImGuiIOPtr io)
    {
        if (ImGui.CollapsingHeader(GetString("Portal Kick")))
        {
            if (ImGui.BeginTable("#PortalKickPlayerTable", 4,
                    ImGuiTableFlags.Borders |
                    ImGuiTableFlags.Resizable |
                    ImGuiTableFlags.RowBg |
                    ImGuiTableFlags.SizingFixedFit))
            {
                ImGui.TableSetupColumn(GetString("Player Name"), ImGuiTableColumnFlags.WidthStretch);
                ImGui.TableSetupColumn(GetString("Player ID"), ImGuiTableColumnFlags.WidthFixed, 80.0f);
                ImGui.TableSetupColumn(GetString("Action"), ImGuiTableColumnFlags.WidthFixed, 80.0f);
                ImGui.TableHeadersRow();

                for (int i = 0; i < Main.maxPlayers; i++)
                {
                    if (!Main.player[i].active)
                        continue;
                
                    ImGui.PushID(i);
                    ImGui.TableNextRow();
                
                    ImGui.TableSetColumnIndex(0);
                    ImGui.Text(Main.player[i].name);
                
                    ImGui.TableSetColumnIndex(1);
                    ImGui.Text(i.ToString());
                
                    ImGui.TableSetColumnIndex(2);
                    if (i != Main.myPlayer)
                    {
                        if (ImGui.Button(IsExploiting[i] ? GetString("Cancel") : GetString("Kick!")))
                            IsExploiting[i] = !IsExploiting[i];
                    }
                    else
                    {
                        ImGui.BeginDisabled();
                        ImGui.Button(GetString("Seriously?"));
                        ImGui.EndDisabled();
                    }
                
                    ImGui.PopID();
                }
                
                ImGui.EndTable();
            }
        }
    }

    public override void Update()
    {
        SendTimer -= Time.DrawDeltaTime;
        if (SendTimer > 0.0f)
            return;
        SendTimer = 0.01f;

        for (int i = 0; i < Main.maxPlayers; i++)
        {
            if (!IsExploiting[i])
                continue;
            if (!Main.player[i].active)
            {
                IsExploiting[i] = false;
                continue;
            }
            var a = Projectile.NewProjectile(null!, Main.player[i].position.X, Main.player[i].position.Y, 0f, 0f, ProjectileID.PortalGunGate, 0, 0f, Main.myPlayer, 3.15f, 0);
            var b = Projectile.NewProjectile(null!, Main.player[i].position.X, Main.player[i].position.Y, 0f, 0f, ProjectileID.PortalGunGate, 0, 0f, Main.myPlayer, 3.15f, 1);
            // clear the portals immediately so we won't get hurt
            Main.projectile[a].Kill();
            Main.projectile[b].Kill();
        }
    }
}