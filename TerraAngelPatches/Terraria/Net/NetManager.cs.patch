--- src/Terraria/Terraria/Net/NetManager.cs
+++ src/TerraAngel/Terraria/Net/NetManager.cs
@@ -135,6 +_,42 @@
         if (Main.netMode != 0)
         {
             packet.ShrinkToFit();
+            if (Main.netMode == 1 && NetMessageWindow.Instance.FancyLoggingEnabled)
+            {
+                try
+                {
+                    var packetLog = new SentNetPacketLog
+                    {
+                        Type = MessageID.NetModules
+                    };
+
+                    if (NetMessageWindow.Instance.MessagesTypesToLogTraces.Contains(MessageID.NetModules))
+                    {
+                        packetLog.StackTrace = new System.Diagnostics.StackTrace(2, true).ToString();
+                    }
+
+                    NetMessageWindow.Instance.SentNetPacketLogs[MessageID.NetModules].Add(packetLog);
+                    NetMessageWindow.Instance.AllNetPacketLogs[MessageID.NetModules].Add(packetLog);
+
+                    if (NetMessageWindow.Instance.MessagesTypesToLogDetails.Contains(MessageID.NetModules))
+                    {
+                        try
+                        {
+                            using var br = new BinaryReader(new MemoryStream(packet.Buffer.Data, 0, packet.Length));
+                            packetLog.Packet = TerraAngel.Net.Shared.ServerPacketSerializer.Deserialize(br);
+                        }
+                        catch (System.Exception ex)
+                        {
+                            ClientLoader.Console.WriteError(GetString($"[C2S] Packet deserialization failed:\n{ex}"));
+                        }
+                    }
+                }
+                catch (System.Exception ex)
+                {
+                    ClientLoader.Console.WriteError(
+                        GetString($"[C2S] Packet logging failed:\n{ex}"));
+                }
+            }
             try
             {
                 socket.AsyncSend(packet.Buffer.Data, 0, packet.Length, SendCallback, packet);
